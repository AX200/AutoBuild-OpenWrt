name: Build-X86-ALL

on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检查系统
      uses: actions/checkout@master

    - name: 安装依赖和更新
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        sudo -E apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: 下载源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        sudo mkdir /mnt/workspace
        sudo chown $USER:$GROUPS /mnt/workspace
        cd /mnt/workspace
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cp /home/runner/work/AutoBuild-OpenWrt/AutoBuild-OpenWrt/* /mnt/workspace/openwrt

################################################################################################

    - name: 执行自定义脚本
      working-directory: /mnt/workspace/openwrt
      run: |
        chmod +x ./diy-x86.sh && ./diy-x86.sh
        
    - name: 更新 & 安装 feeds
      working-directory: /mnt/workspace/openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

##################################OpenWrt-x86-docker####################################################
    - name: 自定义配置x86-docker
      working-directory: /mnt/workspace/openwrt
      run: |
        mv lean-x86-docker.config .config  && make defconfig
        
    - name: 下载包文件x86-docker
      working-directory: /mnt/workspace/openwrt
      run: |
        make download -j8

    - name: 编译固件x86-docker
      working-directory: /mnt/workspace/openwrt
      run: |
        make -j8
    
    - name: 固件保存x86-docker
      working-directory: /mnt/workspace/openwrt
      run: |
        cp /mnt/workspace/openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.img.gz /mnt/workspace/openwrt-x86-docker.img.gz
        cp /mnt/workspace/openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.vmdk /mnt/workspace/openwrt-x86-docker.vmdk

    - name: 删除配置
      working-directory: /mnt/workspace/openwrt
      run: |
        rm -rf .config
###################################OpenWrt-x86######################################################
    - name: 自定义配置x86
      working-directory: /mnt/workspace/openwrt
      run: |
        mv lean-x86.config .config  && make defconfig
    - name: 编译固件x86
      working-directory: /mnt/workspace/openwrt
      run: |
        make -j8
    - name: 固件保存x86
      working-directory: /mnt/workspace/openwrt
      run: |
        cp /mnt/workspace/openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.img.gz /mnt/workspace/openwrt-x86.img.gz
        cp /mnt/workspace/openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.vmdk /mnt/workspace/openwrt-x86.vmdk
        
    - name: 删除配置
      working-directory: /mnt/workspace/openwrt
      run: |
        rm -rf .config
  
##################################上传固件##############################################
    - name : 上传固件x86-docker
      uses: actions/upload-artifact@master
      with:
        name: openwrt-x86-docker
        path: |
          /mnt/workspace/openwrt-x86-docker.img.gz
    - name : 上传固件x86-docker-vmdk
      uses: actions/upload-artifact@master
      with:
        name: openwrt-x86-docker-vmdk
        path: |
          /mnt/workspace/openwrt-x86-docker.vmdk


    - name : 上传固件x86
      uses: actions/upload-artifact@master
      with:
        name: openwrt-x86
        path: |
          /mnt/workspace/openwrt-x86.img.gz

    - name : 上传固件x86-vmdk
      uses: actions/upload-artifact@master
      with:
        name: openwrt-x86-vmdk
        path: |
          /mnt/workspace/openwrt-x86.vmdk