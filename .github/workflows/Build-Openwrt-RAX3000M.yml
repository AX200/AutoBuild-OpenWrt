name: OpenWrt-CI-RAX3000M

on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检查系统
      uses: actions/checkout@master

    - name: 安装依赖和更新
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /usr/local/lib/android \
          /opt/ghc \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
        sudo -E apt-get update
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev \
          libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev \
          libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
          python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 下载源代码
      env: 
        REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
        REPO_BRANCH: openwrt-21.02
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 执行自定义脚本
      run: |
        chmod +x ./diy-rax3000m.sh && ./diy-rax3000m.sh
        
    - name: 更新 & 安装 feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: 自定义配置
      env:
        CONFIG_FILE: 'rax3000m.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: 下载包文件
      working-directory: ./openwrt
      run: |
        make download -j8

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        make -j8

    - name : 上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-RAX3000M
        path: |
          openwrt/bin/targets/mediatek/mt7981
